[build-system]
requires = ["setuptools>=70", "wheel", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "itd-crm-integrations-api-tester"
description = "FastAPI service with several examples of APIs to test integrations."
readme = "README.md"
requires-python = ">=3.10"
license = "LicenseRef-Proprietary"
authors = [{ name = "Cristiano Diniz da Silva", email = "csilva@intakedesk.com" }]
maintainers = [{ name = "IntakeDesk LLC", email = "legal@intakedesk.com" }]
keywords = ["fastapi", "uvicorn", "api"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Framework :: FastAPI",
  "Typing :: Typed",
]
# Use git tags for versioning (e.g., `v0.1.0`)
dynamic = ["version"]

# Runtime deps: keep ranges (pin in prod via constraints if needed)
dependencies = [
  "fastapi>=0.102,<1.0",
  "uvicorn[standard]>=0.23,<1.0",
]

[project.optional-dependencies]
dev = [
  "ruff>=0.11",
  "pytest>=7.4",
  "pytest-asyncio>=0.21",
  "httpx>=0.24",
  "coverage[toml]>=7.6",
  "mypy>=1.8",
  "pre-commit>=3.7",
]

[project.urls]
Repository = "https://github.com/csilva-intakedesk/api-tester"
Issues = "https://github.com/csilva-intakedesk/api-tester/issues"

# Optional CLI entry point: `python -m api-tester` or `api-tester`
[project.scripts]
api-tester = "app.__main__:main"

[tool.setuptools.packages.find]
include = ["app*"]

# Include common web assets if you have them
[tool.setuptools.package-data]
app = ["templates/**/*.html", "static/**/*"]

[tool.setuptools_scm]
# Tag format like v0.1.0; avoid guessing non-tag versions
version_scheme = "no-guess-dev"
local_scheme = "node-and-date"

# ---------------------
# Tooling configuration
# ---------------------

[tool.ruff]
line-length = 100
src = ["app", "tests"]
fix = true

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B", "PERF", "ASYNC", "C4", "S", "N", "DTZ"]
ignore = ["E203"]  # keep formatter-friendly slicing

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = ["S101"]  # allow bare `assert` in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-q -ra --strict-markers --strict-config"
filterwarnings = [
  "error",
  "ignore::DeprecationWarning:pkg_resources",
]

[tool.coverage.run]
branch = true
source = ["app"]
omit = ["tests/*", "*/__init__.py"]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 90

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true
strict_equality = true
plugins = []  # add "pydantic.mypy" if you rely on it

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
check_untyped_defs = false
